@page "/countries"
@layout MainLayout
@using BlazorPwaApp.Client.Services.CountryService;
@using static System.Net.WebRequestMethods;
@inject ICountryService CountryService
@inject IJSRuntime js
@inject NavigationManager NavigationManager

<PageTitle>Country</PageTitle>

<h3>Countries</h3>

<button class="btn btn-primary" @onclick="CreateNewCountry">Create New Country</button>

<table class="table">
   <thead>
      <tr>
         <th>Country name</th>
         <th>Country code</th>
         <th>ISO Code2</th>
         <th></th>
      </tr>
   </thead>

   <tbody>
      @foreach (var country in CountryService.Countries)
      {
         <tr>
            <td>@country.CountryName</td>
            <td>@country.CountryCode</td>
            <td>@country.ISOCode2</td>
            <td>
               <button class="btn btn-primary" @onclick="(() => ShowCountry(country.Oid))"><i class="oi oi-pencil"></i></button>
               @*<button type="button" class="btn btn-danger mx-2" @onclick="(() => DeleteCountry(country.Oid))"><i class="oi oi-delete"></i></button>*@
               <button type="button" class="btn btn-danger mx-2" @onclick="(() => ConfirmDelete(country.Oid, country.CountryName))"><i class="oi oi-delete"></i></button>
            </td>
         </tr>
      }
   </tbody>
</table>

@code {

   protected List<Country> list = new List<Country>();

   [Parameter]
   public string Id { get; set; }

   protected override async Task OnInitializedAsync()
   {
      await CountryService.GetCountries();
   }

   void ShowCountry(int id)
   {
      NavigationManager.NavigateTo($"createcountry/{id}");
   }

   void CreateNewCountry()
   {
      NavigationManager.NavigateTo("/createcountry");
   }

   //async Task DeleteCountry(int countryId)
   //{
   //   await CountryService.DeleteCountry(countryId);
   //   await CountryService.GetCountries();
   //}

   async Task ConfirmDelete(int id, string countryName)
   {
      if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {countryName}'s ({id}) Record?"))
      {
         await CountryService.DeleteCountry(id);
         await CountryService.GetCountries();
      }
   }
}