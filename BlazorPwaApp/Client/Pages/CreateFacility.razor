@page "/createfacility"
@page "/createfacility/{id:int}"
@layout MainLayout
@using BlazorPwaApp.Shared.Entities;
@inject IFacilityService FacilityService
@inject NavigationManager NavigationManager

@if (Id == null)
{
   <PageTitle>Create a new Facility</PageTitle>
   <h3>Create a new Facility</h3>
}
else
{
   <PageTitle>Edit @facility.FacilityName</PageTitle>
   <h3>Edit @facility.FacilityName</h3>
}

@if (!string.IsNullOrEmpty(ErrorMessage))
{
   <p class="text-danger">@ErrorMessage</p>
}

<div class="row">
   <div class="col-md-10">
      <div class="card">
         <div class="card-header">
            <Span>Facility</Span>
         </div>
         <div class="card-body ps-5 pe-5 mb-4">

            <EditForm Model="facility" OnSubmit="HandleSubmit">
               <DataAnnotationsValidator />

               <div class="mt-3">
                  <label>Country</label><br />
                  <select @onchange="OnCountryChange" class="form-select">
                     <option value="">Select a country</option>
                     @foreach (var country in FacilityService.Countries)
                     {
                        <option value="@country.Oid">@country.CountryName</option>
                     }
                  </select>
               </div>

               <div class="mt-3">
                  <label>Province</label><br />
                  <select @onchange="OnProvinceChange" class="form-select">
                     <option value="">Select a province</option>
                     @foreach (var province in FacilityService.Provinces.Where(p => p.CountryId == selectedCountryId))
                     {
                        <option value="@province.Oid">@province.ProvinceName</option>
                     }
                  </select>
               </div>

               <div class="mt-3">
                  <label>District</label><br />
                  <select @bind="facility.DistrictId" class="form-select">
                     <option value="">Select a district</option>
                     @foreach (var district in FacilityService.Districts.Where(d => d.ProvinceId == selectedProvinceId))
                     {
                        <option value="@district.Oid">@district.DistrictName</option>
                     }
                  </select>
               </div>

               <div class="mt-3">
                  <label for="FacilityName">Facility</label>
                  <InputText id="FacilityName" @bind-Value="facility.FacilityName" class="form-control"></InputText>
                  <ValidationMessage For="@(() => facility.FacilityName)" />
               </div>

               <div class="mt-3">
                  <label for="HMISCode">HMIS Code</label>
                  <InputText id="HMISCode" @bind-Value="facility.HMISCode" class="form-control"></InputText>
                  <ValidationMessage For="@(() => facility.HMISCode)" />
               </div>

               <div class="mt-3">
                  <label for="Latitude">Latitude</label>
                  <InputText id="Latitude" @bind-Value="facility.Latitude" class="form-control"></InputText>
               </div>

               <div class="mt-3">
                  <label for="Longitude">Longitude</label>
                  <InputText id="Longitude" @bind-Value="facility.Longitude" class="form-control"></InputText>
               </div>  

               <div class="mt-3">
                  <label for="IsPrivateFacility">IsPrivateFacility</label>
                  <div class="form-check">
                     <input id="IsPrivateFacility" class="form-check-input" type="checkbox" @bind="facility.IsPrivateFacility">
                  </div>
               </div>

               <br />

               <button type="submit" class="btn btn-primary">@btnText</button>

               @if (Id != null)
               {
                  <button type="button" class="btn btn-danger mx-2" @onclick="DeleteFacility">Delete Facility</button>
               }
               else
               {
                  <button type="button" class="btn btn-danger mx-2" @onclick="GoToFacilityPage">Back</button>
               }
            </EditForm>

         </div>
      </div>
   </div>
</div>

@code {
   [Parameter]
   public int? Id { get; set; }

   string btnText = string.Empty;
   string ErrorMessage = string.Empty;

   private int selectedCountryId;
   private int selectedProvinceId;

   Facility facility = new Facility { District = new District() };

   protected override async Task OnInitializedAsync()
   {
      btnText = Id == null ? "Save New Facility" : "Update Facility";
      await FacilityService.GetDistricts();
      await FacilityService.GetProvinces();
      await FacilityService.GetCountries();
   }

   protected override async Task OnParametersSetAsync()
   {
      if (Id == null)
      {
         facility.District = FacilityService.Districts.FirstOrDefault();
         facility.DistrictId = facility.District?.Oid ?? 0;
      }
      else
      {
         facility = await FacilityService.GetSingleFacility((int)Id);
         selectedCountryId = facility.District?.Province?.CountryId ?? 0;
         selectedProvinceId = facility.District?.ProvinceId ?? 0;
      }
   }

   async Task HandleSubmit()
   {
      if (Id == null)
      {
         await FacilityService.CreateFacility(facility);
      }
      else
      {
         await FacilityService.UpdateFacility(facility);
      }
   }

   async Task DeleteFacility()
   {
      await FacilityService.DeleteFacility(facility.Oid);
   }

   private void GoToFacilityPage()
   {
      NavigationManager.NavigateTo("/Facilities");
   }

   private void OnCountryChange(ChangeEventArgs e)
   {
      if (int.TryParse(e.Value.ToString(), out int newCountryId))
      {
         selectedCountryId = newCountryId;
         facility.District.ProvinceId = 0;
         facility.DistrictId = 0;
      }
      else
      {
         selectedCountryId = 0;
      }
   }

   private async Task OnProvinceChange(ChangeEventArgs e)
   {
      if (int.TryParse(e.Value.ToString(), out int newProvinceId))
      {
         selectedProvinceId = newProvinceId;
         facility.DistrictId = 0;
      }
      else
      {
         selectedProvinceId = 0;
      }
   }
}